import java.util.Stack; 
import java.util.Scanner; 

class SinglyLinkedListNode {
    int data;
    SinglyLinkedListNode next;
    
    SinglyLinkedListNode(int data) {
        this.data = data;
        this.next = null;
    }
}

public class Solution {
   
    static void reversePrint(SinglyLinkedListNode head) {
        Stack<Integer> stack = new Stack<>();
        SinglyLinkedListNode current = head;
        while (current != null) {
            stack.push(current.data);
            current = current.next;
        }
        
        while (!stack.isEmpty()) {
            System.out.println(stack.pop());
        }
    }
    public static SinglyLinkedListNode insertNode(SinglyLinkedListNode head, int data) {
        SinglyLinkedListNode node = new SinglyLinkedListNode(data);
        if (head == null) {
            return node;
        } else {
            SinglyLinkedListNode current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = node;
            return head;
        }
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt();
        while (t-- > 0) {
            int n = scanner.nextInt();
            SinglyLinkedListNode head = null;
            for (int i = 0; i < n; i++) {
                int data = scanner.nextInt();
                head = insertNode(head, data);
            }
            reversePrint(head);
        }
        scanner.close();
    }
}
